[workspace]
members = [
    "ansi-escape",
    "apply-patch",
    "arg0",
    "browser",
    "cli",
    "common",
    "core",
    "exec",
    "execpolicy",
    "file-search",
    "linux-sandbox",
    "login",
    "mcp-client",
    "mcp-server",
    "mcp-types",
    "protocol",
    "ollama",
    "protocol",
    "protocol-ts",
    "tui",
]
resolver = "2"

[workspace.package]
version = "3.0.0"
# Track the edition for all workspace crates in one place. Individual
# crates can still override this value, but keeping it here means new
# crates created with `cargo new -w ...` automatically inherit the 2024
# edition.
edition = "2024"

[workspace.lints]
rust = {}

[workspace.lints.clippy]
expect_used = "deny"
uninlined_format_args = "deny"
unwrap_used = "deny"

# Fast development profile - optimized for quick iteration
[profile.dev-fast]
inherits = "dev"
opt-level = 1
incremental = true
codegen-units = 256
lto = "off"

# Release profile with incremental compilation for faster local builds
[profile.release]
incremental = true  # Enable for faster rebuilds during local development
codegen-units = 256  # More parallelism for faster builds
lto = "thin"  # Changed from "fat" to "thin" for faster builds (still good optimization)
# Because we bundle some of these executables with the TypeScript CLI, we
# remove everything to make the binary as small as possible.
strip = "symbols"

# Production release profile (for CI/distribution)
[profile.release-prod]
inherits = "release"
incremental = false  # Disable for production builds
codegen-units = 1  # Single codegen unit for best optimization
lto = "fat"  # Maximum link-time optimization
strip = "debuginfo"  # Fully strip debug info in production artifacts

[patch.crates-io]
# No overrides; use crates.io ratatui release
